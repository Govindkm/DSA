Order of growth is decides asymptotic behaviour of a function based on the order. The more the order of growth the slower the code becomes.

A function f(n) is said to be growing faster than other function g(n) if

lim n->inf g(n)/f(n) = 0;

or

lim n->innf f(n)/g(n) = inf;

eg: 
f(n) = 2n2 + 3n + 5
g(n) = 3n + 20

lim n->inf g(n)/f(n) = (3/n + 20/n2)/(2 + 3/n + 5/n2) = 0/2 = 0

Direct way of finding the order of growth

1. Ignore the lower order terms
2. Ignore the constants attached to highest order terms

eg: f(n) = 2n2 + 3n + 5 => O(f(n)) = n2(Quadratic)
----------------------------------------------------------------------------------------------------

Remember

Constant < log(log(n)) < log(n) < n^(1/3) < n^(1/2) < n < n2 < n3 < n4 < 2n < n^n